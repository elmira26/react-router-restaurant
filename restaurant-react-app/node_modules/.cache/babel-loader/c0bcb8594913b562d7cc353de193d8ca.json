{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/react-ro/kabzda/src/Recipe.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport \"./recipe.css\";\n\nconst Recipe = () => {\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    getRecipe(id);\n  }, [id]);\n  const [data, setData] = useState({\n    dishTypes: []\n  });\n  const [recipe, setRecipe] = useState([{\n    steps: [{}]\n  }]);\n\n  const getRecipe = async id => {\n    fetch(`https://api.spoonacular.com/recipes/${id}/information?&apiKey=d2cd79e450d14697b5225d90ec63320e`, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      includeInstruction: \"false\",\n      id: \"\"\n    }).then(res => res.json()).then(result => {\n      setRecipe(result.analyzedInstructions[0].steps);\n      setData(result);\n      console.log(result);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recipeContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recipeContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"recipeTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, data.title), /*#__PURE__*/React.createElement(\"p\", {\n    id: data.id,\n    className: \"recipeSteps\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    id: data.id,\n    className: \"recipeImg\",\n    src: data.image,\n    alt: \"dish img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), recipe.map(item => /*#__PURE__*/React.createElement(\"span\", {\n    className: \"spanSteps\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, item.step)), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"recipeType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Dish type : \", data.dishTypes[0]), /*#__PURE__*/React.createElement(\"h5\", {\n    id: data.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Total time : \", data.readyInMinutes, \" min\")), /*#__PURE__*/React.createElement(Link, {\n    className: \"link\",\n    to: \"/menu\",\n    className: \"closeRecipe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"x\"), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"recipe-pin-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"./images/basic_pin2.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Recipe;","map":{"version":3,"sources":["/Users/mac/Desktop/react-ro/kabzda/src/Recipe.js"],"names":["React","useState","useEffect","useParams","Link","Recipe","id","getRecipe","data","setData","dishTypes","recipe","setRecipe","steps","fetch","headers","includeInstruction","then","res","json","result","analyzedInstructions","console","log","title","image","map","item","step","readyInMinutes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport \"./recipe.css\";\nconst Recipe = () => {\n  const { id } = useParams();\n  useEffect(() => {\n    getRecipe(id);\n  }, [id]);\n  const [data, setData] = useState({\n    dishTypes: [],\n  });\n\n  const [recipe, setRecipe] = useState([\n    {\n      steps: [{}],\n    },\n  ]);\n\n  const getRecipe = async (id) => {\n    fetch(\n      `https://api.spoonacular.com/recipes/${id}/information?&apiKey=d2cd79e450d14697b5225d90ec63320e`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        includeInstruction: \"false\",\n        id: \"\",\n      }\n    )\n      .then((res) => res.json())\n      .then((result) => {\n        setRecipe(result.analyzedInstructions[0].steps);\n\n        setData(result);\n        console.log(result);\n      });\n  };\n\n  return (\n    <div className=\"recipeContainer\">\n      <div className=\"recipeContent\">\n        <h2 className=\"recipeTitle\">{data.title}</h2>\n        <p id={data.id} className=\"recipeSteps\">\n          <img\n            id={data.id}\n            className=\"recipeImg\"\n            src={data.image}\n            alt=\"dish img\"\n          />\n\n          {recipe.map((item) => (\n            <span className=\"spanSteps\">{item.step}</span>\n          ))}\n\n          <h4 className=\"recipeType\">Dish type : {data.dishTypes[0]}</h4>\n          <h5 id={data.id}>Total time : {data.readyInMinutes} min</h5>\n        </p>\n        <Link className=\"link\" to=\"/menu\" className=\"closeRecipe\">\n          x\n        </Link>\n        <i className=\"recipe-pin-icon\">\n          <svg xmlns=\"./images/basic_pin2.svg\" />\n        </i>\n      </div>\n    </div>\n  );\n};\n\nexport default Recipe;\n"]},"metadata":{},"sourceType":"module"}